$themes: (
  "dark": (
    base0: #f5f5f5, // Couleur claire pour le texte en mode dark
    base10: #e0e0e0,
    base20: #c4c4c4,
    base30: #a8a8a8,
    base40: #8c8c8c,
    base50: #707070,

    surface0: #121212,
    surface10: #282828,
    surface20: #3f3f3f,
    surface30: #575757,
    surface40: #717171,
    surface50: #8b8b8b,

    primary0: #0ec788,
    primary10: #47ce95,
    primary20: #66d5a2,
    primary30: #80dbaf,
    primary40: #97e1bc,
    primary50: #ade8c9,
  ),
  "light": (
    base0: #333333, // Couleur fonc√©e pour le texte en mode light
    base10: #4f4f4f,
    base20: #696969,
    base30: #8a8a8a,
    base40: #a3a3a3,
    base50: #bcbcbc,

    surface0: #ffffff,
    surface10: #fafafa,
    surface20: #f5f5f5,
    surface30: #efefef,
    surface40: #e9e9e9,
    surface50: #e3e3e3,

    primary0: #0ec788,
    primary10: #47ce95,
    primary20: #66d5a2,
    primary30: #80dbaf,
    primary40: #97e1bc,
    primary50: #ade8c9,
  ),
);


@mixin gthemed() {
  @each $theme, $map in $themes {
    :global(.theme--#{$theme}) & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key: "base0") {
  @if not $theme-map {
    @warn "t() function can only be used inside a themed block";
    @return null;
  }
  @return map-get($theme-map, $key);
}
